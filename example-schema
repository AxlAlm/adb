
// SCHEMA DEFINITION
// stream(<stream name>, <key name>);
stream(accounts, account-id);
// event(<stream, name>, <event name>);
event(AccountCreated, accounts);
// attribute(<event name>, <attribute name>, <required>, <type>);
attribute(AccountCreated, owner-name, true, string);


//  adding
// ADD <EVENT>(<key value>, <attribute>=<attribute value>, ...) TO <STREAM>
ADD AccountCreated(123, owner-name=axel) TO accounts

// transaction
[add AccountCreated("axel", this)]

//  adding
add AccountCreated("axel", this)

// transaction
find ?account_id where 



;; Query 1: Find all accounts that had withdrawals within 1 hour of creation
[:find ?account-id ?withdraw-amount
 :where
 [?c :type "AccountCreated"]
 [?c :account-id ?account-id]
 [?c :timestamp ?create-time]
 [?w :type "MoneyWithdrawn"]
 [?w :account-id ?account-id]
 [?w :amount ?withdraw-amount]
 [?w :timestamp ?withdraw-time]
 [(< (- ?withdraw-time ?create-time) 3600000)]]

;; Query 2: Find accounts with deposits larger than initial balance
[:find ?account-id ?deposit-amount
 :where
 [?c :type "AccountCreated"]
 [?c :account-id ?account-id]
 [?c :balance ?initial]
 [?d :type "MoneyDeposited"]
 [?d :account-id ?account-id]
 [?d :amount ?deposit-amount]
 [(> ?deposit-amount ?initial)]]
        



